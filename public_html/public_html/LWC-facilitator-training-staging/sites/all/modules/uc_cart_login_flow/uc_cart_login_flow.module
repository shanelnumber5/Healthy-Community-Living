<?php
/**
 * @file
 * UC Cart Login Flow that changes the behavior of the cart once the user logs in.
 */

/**
 * Implements hook_FORM_alter().
 * We add to the form a reference to the session cart, so once we log in we can
 * associate it with the logged in user.
 */
function uc_cart_login_flow_form_user_login_alter(&$form, &$form_state) {
  if (isset($_SESSION['uc_cart_id'])) {
    $form['cid'] = array(
      '#type' => 'hidden',
      '#value' => $_SESSION['uc_cart_id'],
    );
  }
  return $form;
}

/**
 * Implements hook_FORM_alter().
 * We add to the form a reference to the session cart, so once we log in we can
 * associate it with the logged in user.
 */
function uc_cart_login_flow_form_user_login_block_alter(&$form, &$form_state) {
  if (isset($_SESSION['uc_cart_id'])) {
    $form['cid'] = array(
      '#type' => 'hidden',
      '#value' => $_SESSION['uc_cart_id'],
    );
  }
  return $form;
}

/**
 * Implements hook_FORM_alter().
 * Add a setting for deciding if we should discard or not the cart when logging in.
 */
function uc_cart_login_flow_form_uc_cart_cart_settings_form_alter(&$form, &$form_state) {
  $form['uc_cart_login_flow'] = array(
    '#type' => 'fieldset',
    '#title' => t('Login flow settings'),
    '#group' => 'cart-settings',
    'uc_cart_login_flow_always_override' => array(
      '#type' => 'checkbox',
      '#title' => t('Always discard user existing cart when logging in?'),
      '#description' => t('If you mark this checkbox, the cart of the anonymous user always override the existing one when she logs in.'),
      '#default_value' => variable_get('uc_cart_login_flow_always_override', FALSE),
    ),
  );
}

/**
 * Implements hook_user_login().
 * Depending on the form that sent the login request, we associate the existing
 * anonymous cart or we assign it to the logged in user.
 */
function uc_cart_login_flow_user_login(&$edit, &$account) {
  global $user;
  if ($_GET['q'] == 'cart/checkout') {
    if (isset($edit['input']['cid'])) {
      _uc_cart_login_flow_associate_cart($account, $edit['input']['cid']);
    }
  }
  elseif (isset($_GET['destination']) &&
    $_GET['destination'] == 'cart/checkout') {
      if (isset($edit['input']['cid'])) {
        _uc_cart_login_flow_associate_cart($account, $edit['input']['cid']);
      }
  }
  else {
    if (isset($edit['input']['cid'])) {
      if (variable_get('uc_cart_login_flow_always_override', FALSE)) {
        _uc_cart_login_flow_associate_cart($account, $edit['input']['cid']);
      }
      else {
        _uc_cart_login_flow_discard_cart($account, $edit['input']['cid']);
      }
    }
  }
}

/**
 * Associate cart when the user logs in during checkout.
 */
function _uc_cart_login_flow_associate_cart($user, $cid) {
  uc_cart_empty($user->uid);
  // this avoids uc_cart_login_update to be called.
  db_update('uc_cart_products')
    ->fields(array(
      'cart_id' => $user->uid,
    ))
    ->condition('cart_id', $cid)
    ->execute();

  unset($_SESSION['uc_cart_id']);
}

/**
 * Discard cart when the user logs in.
 */
function _uc_cart_login_flow_discard_cart($user, $cid) {
  uc_cart_empty($cid);
  db_delete('uc_cart_products')
    ->condition('cart_id', $cid)
    ->execute();
  unset($_SESSION['uc_cart_id']);
}


